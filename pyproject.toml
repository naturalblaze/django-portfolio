[build-system]
requires = [
    "setuptools>=67.6.0",
    "wheel>=0.40.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "django-portfolio"
dynamic = ["readme"]
version = "0.3.0"
requires-python = ">=3.11"
description = "Django Portfolio Project"
keywords = [
]
authors = [
  { name="Blaze Bryant", email="naturalblaze@gmail.com" },
]
maintainers = [
  {name = "Blaze Bryant", email = "naturalblaze@gmail.com"},
]
license = "MIT"
license-files = [
    "LICENSE"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: BSD",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",]


dependencies = [
    "django>=5.2.7",
    "django-markdownx>=4.0.9",
    "django-environ>=0.12.0",
    "django-htmx>=1.23.2",
    "django-taggit>=6.1.0",
    "markdown>=3.8.2",
    "django-extensions>=4.1",
    "pymdown-extensions>=10.16.1",
    "wordcloud>=1.9.4",
    "matplotlib>=3.10.6",
    "pillow>=11.3.0",
    "django-visit-count>=1.2.1",
    "toml>=0.10.2",
]

[dependency-groups]
prod = [
    "gunicorn>=23.0.0",
    "psycopg2-binary>=2.9.10",
]
dev = [
    "black>=25.1.0",
    "tomli>=2.2.1",
    "pytest-cov>=6.2.1",
    "pytest-django>=4.11.1",
    "sphinx>=8.2.3",
    "pylint>=3.3.8",
    "myst-parser>=4.0.1",
    "sphinx_rtd_theme>=3.0.2",
    "sphinxcontrib-mermaid>=1.0.0",
    "httpx>=0.28.1",
    "bandit>=1.8.6",
    "ruff>=0.12.11",
    "factory-boy>=3.3.3",
    "pytest-factoryboy>=2.8.1",
    "pytest-dotenv>=0.5.2",
]

[project.urls]
Documentation = "https://django-portfolio.readthedocs.io/en/latest/"
Source = "https://github.com/naturalblaze/django-portfolio"
Tracker = "https://github.com/naturalblaze/django-portfolio/issues"

# Add your project folder and app folders
[tool.setuptools.packages.find]
include = [
    "portfolio_project*",
    "portfolio_app*"
]

# Add or remove file extensions to include the data
[tool.setuptools.package-data]
"*" = ["*.txt", "*.rst"]

[tool.setuptools]
zip-safe = false

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}


[tool.pytest.ini_options]
env_files = [
    "tests/data/.test-env"
]
addopts = "--ds=portfolio_project.settings.local --reuse-db --import-mode=importlib --strict-markers --cov-report term-missing"
markers = [
    "place_holder: marks tests as place_holder (deselect with -m 'not place_holder')",
]

[tool.coverage.run]
command_line= "-m pytest -vvv"

# Add your project folder and app folders
[tool.coverage.report]
include = [
    "portfolio_project/*",
    "portfolio_app/*",
]
fail_under = 70

[tool.pylint]
max-line-length = 120
ignore-paths = [
    ".*migrations.*$",
]
# This allows pylint to complain on FIXME and XXX notes
notes = [
    "FIXME",
    "XXX",
]
fail-under = 9.9

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.bandit]
exclude_dirs = [
    "tests",
    "venv",
    ".venv",
    "docs",
    "scripts",
]

# UV settings reference https://docs.astral.sh/uv/reference/settings/
[tool.uv]
keyring-provider = "subprocess"
native-tls = true
